mean(pred == halldorsson_counts_split$age_group)
library(tidyverse)
theme_set(theme_minimal())
halldorsson_child_counts <- read_rds("../data/halldorsson_child_counts.rds") |> as.data.frame()
halldorsson_child_fract <- read_rds("../data/halldorsson_child_fract.rds") |> as.data.frame()
p1 <- ggplot(halldorsson_child_counts, aes(x = age_father)) +
geom_histogram(binwidth = 1, fill = "deepskyblue3", color = "black") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Distribution of Fathers' age", x = "Fathers' Age", y = "Count")
p2 <- ggplot(halldorsson_child_counts, aes(x = log10(age_father))) +
geom_histogram(binwidth = .05, fill = "deepskyblue3", color = "black") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Distribution of Fathers' age", x = "Fathers' Age (log)", y = "Count")
ggsave("figure_04_age_distr.png", plot = p1, width = 8, height = 6, path = "./../Figures/")
ggsave("figure_05_age_log_distr.png", plot = p2, width = 8, height = 6, path = "./../Figures/")
shapiro.test(halldorsson_child_counts$age_father)
shapiro.test(log10(halldorsson_child_counts$age_father))
linear_counts <- lm(age_group ~ C_G + C_T + CpG_TpG + T_C + T_G + C_A + T_A, data = halldorsson_child_counts)
View(halldorsson_child_counts)
linear_counts <- lm(age_father ~ C_G + C_T + CpG_TpG + T_C + T_G + C_A + T_A, data = halldorsson_child_counts)
summary(linear_counts)
hist(linear_counts$residuals)
shapiro.test(linear_counts$residuals)
linear_counts_log10_age <- lm(log10(age_father) ~ C_G + C_T + CpG_TpG + T_C + T_G + C_A + T_A, data = halldorsson_child_counts)
summary(linear_counts_log10_age)
hist(linear_counts_log10_age$residuals)
shapiro.test(linear_counts_log10_age$residuals)
var(linear_counts_log10_age$residuals)
qqplot(y = linear_counts_log10_age$residuals, x = rnorm(1000,  sd = sqrt(0.009857264)),xlab = "normal", ylab="observed")
library(tidyverse)
theme_set(theme_minimal())
halldorsson_counts_split <- read_rds("../data/halldorsson_counts_split.rds") |> as.data.frame()
halldorsson_fract_split <- read_rds("../data/halldorsson_fract_split.rds") |> as.data.frame()
fit_model_with_cv <- function(dataset, model_to_fit, folds = 10, repeats) {
create_folds <- function(dataset, folds) {
cvFolds <- cut(seq_len(nrow(dataset)), breaks = folds, labels = FALSE)
cvFolds <- sample(cvFolds)
predicted <- rep(0, nrow(dataset))
for (i in 1:folds) {
inTest <- which(cvFolds == i)
training <- dataset[-inTest, ]
validation <- dataset[inTest, ]
fit <- glm(model_to_fit, data = training, family = binomial)
predicted_probs <- predict(fit, newdata = validation, type = "response")
predicted[inTest] <- ifelse(predicted_probs > 0.5, 1, 0)
}
cv_error <- mean(predicted != dataset$age_group)
return(cv_error)
}
pd <- tibble(run = 1:repeats)
for (i in pd$run) {
set.seed(i)
pd$cv_error[i] <- create_folds(dataset, folds)
cat("Run", i, "\n")
flush.console()
}
assign("pd", pd, envir = .GlobalEnv)
return(pd)
}
fit_model_with_cv(halldorsson_counts_split, "age_group ~ C_G + C_T + CpG_TpG + T_C + T_G + C_A + T_A", 10, 5)
fit_model_with_cv(halldorsson_fract_split, "age_group ~ C_G + C_T + CpG_TpG + T_C + T_G + C_A + T_A", 10, 5)
View(halldorsson_fract_split)
halldorsson_raw <- read.delim("./../data/halldorsson_2019.tsv", header = TRUE, sep = "\t")
library(tidyverse)
halldorsson_prepared <- halldorsson_raw |>
filter(mutation_class_cpg %in% c("T>C", "C>T", "CpG>TpG", "C>G", "C>A", "T>A", "T>G"),
Phase_app1_app2 == "P") |>
group_by(Child, mutation_class_cpg, AGE_FATHER) |>
summarize(
nr_of_mut = n()
)
colnames(halldorsson_prepared) <- c("child", "mutation_class_cpg", "age_father", "nr_of_mut")
write_rds(x = halldorsson_prepared, file = "../data/halldorsson_prepared.rds")
halldorsson_child_counts <- halldorsson_prepared |>
pivot_wider(names_from = mutation_class_cpg,
values_from = nr_of_mut)
halldorsson_child_counts[is.na(halldorsson_child_counts)] <- 0
colnames(halldorsson_child_counts) <- c("child", "age_father", "C_G", "C_T", "CpG_TpG", "T_C", "T_G", "C_A", "T_A")
halldorsson_child_counts$total <- rowSums(halldorsson_child_counts) - halldorsson_child_counts$child - halldorsson_child_counts$age_father
halldorsson_child_fract <- halldorsson_child_counts |>
mutate_at(vars(-total, -age_father, -child), funs(./total)) |>
select(-total)
halldorsson_child_counts <- halldorsson_child_counts |>
select(-total)
write_rds(x = halldorsson_child_counts, file = "../data/halldorsson_child_counts.rds")
write_rds(x = halldorsson_child_fract, file = "../data/halldorsson_child_fract.rds")
halldorsson_counts_split <- halldorsson_child_counts |>
mutate(age_group = as.factor(if_else(age_father > 40, 1, 0)),
.after = 2)
write_rds(x = halldorsson_counts_split, file = "../data/halldorsson_counts_split.rds")
halldorsson_fract_split <- halldorsson_child_fract |>
mutate(age_group = as.factor(if_else(age_father > 40, 1, 0)),
.after = 2)
write_rds(x = halldorsson_fract_split, file = "../data/halldorsson_fract_split.rds")
library(tidyverse)
theme_set(theme_minimal())
halldorsson_counts_split <- read_rds("../data/halldorsson_counts_split.rds") |> as.data.frame()
halldorsson_fract_split <- read_rds("../data/halldorsson_fract_split.rds") |> as.data.frame()
fit_model_with_cv <- function(dataset, model_to_fit, folds = 10, repeats) {
create_folds <- function(dataset, folds) {
cvFolds <- cut(seq_len(nrow(dataset)), breaks = folds, labels = FALSE)
cvFolds <- sample(cvFolds)
predicted <- rep(0, nrow(dataset))
for (i in 1:folds) {
inTest <- which(cvFolds == i)
training <- dataset[-inTest, ]
validation <- dataset[inTest, ]
fit <- glm(model_to_fit, data = training, family = binomial)
predicted_probs <- predict(fit, newdata = validation, type = "response")
predicted[inTest] <- ifelse(predicted_probs > 0.5, 1, 0)
}
cv_error <- mean(predicted != dataset$age_group)
return(cv_error)
}
pd <- tibble(run = 1:repeats)
for (i in pd$run) {
set.seed(i)
pd$cv_error[i] <- create_folds(dataset, folds)
cat("Run", i, "\n")
flush.console()
}
assign("pd", pd, envir = .GlobalEnv)
return(pd)
}
fit_model_with_cv(halldorsson_counts_split, "age_group ~ C_G + C_T + CpG_TpG + T_C + T_G + C_A + T_A", 10, 5)
fit_model_with_cv(halldorsson_fract_split, "age_group ~ C_G + C_T + CpG_TpG + T_C + T_G + C_A + T_A", 10, 5)
logistic_counts <- glm(age_group ~ C_G + C_T + CpG_TpG + T_C + T_G + C_A + T_A, data = halldorsson_counts_split, family = binomial)
probs <- predict(logistic_counts, data = halldorsson_counts_split, type = "response")
pred <- rep(0, nrow(halldorsson_counts_split))
pred[probs > 0.5] = 1
halldorsson_counts_split$predicted <- pred
library(ggeffects)
library(patchwork)
plts <- lapply(names(coefficients(logistic_counts))[-1], function(i) {
return(plot(ggpredict(logistic_counts, i)))
})
wrap_plots(plts)
View(halldorsson_prepared)
library(tidyverse)
theme_set(theme_minimal())
halldorsson_prepared <- read_rds("../data/halldorsson_prepared.rds") |> as.data.frame()
p1 <- halldorsson_prepared |>
group_by(mutation_class_cpg) |>
summarize(
avg_age_father = mean(age_father),
avg_age_mother = mean(age_mother),
nr_of_mut = n()
) |>
ggplot() +
geom_point(aes(x = avg_age_father, y = avg_age_mother, size = nr_of_mut, color = mutation_class_cpg)) +
xlab("Average Age of Father") +
ylab("Average Age of Mother") +
labs(size = "Number of Mutations", color = "Mutation Class")
View(halldorsson_prepared)
View(halldorsson_prepared)
library(tidyverse)
theme_set(theme_minimal())
halldorsson <- read.delim("./../data/halldorsson_2019.tsv", header = TRUE, sep = "\t")
View(halldorsson_prepared)
p <- halldorsson |>
group_by(mutation_class_cpg) |>
summarize(
avg_age_father = mean(AGE_FATHER),
avg_age_mother = mean(AGE_MOTHER),
nr_of_mutations = n()
) |>
arrange(desc(nr_of_mutations)) |>
head(n = 7) |>
ggplot() +
geom_point(aes(x = avg_age_father, y = avg_age_mother, size = nr_of_mutations, color = mutation_class_cpg)) +
xlab("Average Age of Father") +
ylab("Average Age of Mother") +
labs(size = "Number of Mutations", color = "Mutation Class")
ggsave("figure_01_mut_class_freq.png", plot = p, width = 8, height = 5, path = "./../Figures/")
p1 <- halldorsson |>
group_by(mutation_class_cpg) |>
summarize(
avg_age_father = mean(AGE_FATHER),
avg_age_mother = mean(AGE_MOTHER),
nr_of_mutations = n()
) |>
arrange(desc(nr_of_mutations)) |>
head(n = 7) |>
ggplot() +
geom_point(aes(x = avg_age_father, y = avg_age_mother, size = nr_of_mutations, color = mutation_class_cpg)) +
xlab("Average Age of Father") +
ylab("Average Age of Mother") +
labs(size = "Number of Mutations", color = "Mutation Class")
ggsave("figure_01_mut_class_freq.png", plot = p1, width = 8, height = 5, path = "./../Figures/")
halldorsson |>
group_by(mutation_class_cpg) |>
summarize(
avg_age_father = mean(AGE_FATHER),
avg_age_mother = mean(AGE_MOTHER),
nr_of_mutations = n()
) |>
arrange(desc(nr_of_mutations)) |>
head(n = 7) |>
ggplot() +
geom_point(aes(x = avg_age_father, y = avg_age_mother, size = nr_of_mutations, color = mutation_class_cpg)) +
xlab("Average Age of Father") +
ylab("Average Age of Mother") +
labs(size = "Number of Mutations", color = "Mutation Class")
library(tidyverse)
halldorsson_raw <- read.delim("./../data/halldorsson_2019.tsv", header = TRUE, sep = "\t")
halldorsson_explore <- halldorsson_raw |>
filter(mutation_class_cpg %in% c("T>C", "C>T", "CpG>TpG", "C>G", "C>A", "T>A", "T>G")) |>
group_by(mutation_class_cpg) |>
summarize(
avg_age_father = mean(AGE_FATHER),
avg_age_mother = mean(AGE_MOTHER),
nr_of_mutations = n()
)
View(halldorsson_explore)
write_rds(x = halldorsson_explore, file = "../data/halldorsson_explore.rds")
library(tidyverse)
theme_set(theme_minimal())
halldorsson_explore <- read_rds("../data/halldorsson_explore.rds") |> as.data.frame()
ggplot(halldorsson_explore, aes(x = avg_age_father, y = avg_age_mother, size = nr_of_mutations, color = mutation_class_cpg)) +
geom_point() +
xlab("Average Age of Father") +
ylab("Average Age of Mother") +
labs(size = "Number of Mutations", color = "Mutation Class")
p1 <- ggplot(halldorsson_explore, aes(x = avg_age_father, y = avg_age_mother, size = nr_of_mutations, color = mutation_class_cpg)) +
geom_point() +
xlab("Average Age of Father") +
ylab("Average Age of Mother") +
labs(size = "Number of Mutations", color = "Mutation Class")
ggsave("figure_01_mut_class_freq.png", plot = p1, width = 8, height = 5, path = "./../Figures/")
library(patchwork)
# Avg age of father
p1 <- ggplot(halldorsson_explore) +
geom_bar(aes(x = mutation_class_cpg, y = avg_age_father), fill = "deepskyblue3", color = "black", stat = "identity") +
scale_y_continuous(limits = c(0, 33.5)) +
xlab("Mutation Class") +
ylab("Average Age of Father")
# Avg age of mother
p2 <- ggplot(halldorsson_explore) +
geom_bar(aes(x = mutation_class_cpg, y = avg_age_mother), fill = "deepskyblue3", color = "black", stat = "identity") +
scale_y_continuous(limits = c(0, 33.5)) +
xlab("Mutation Class") +
ylab("Average Age of Mother")
p_combined <- p2 + p1
ggsave("figure_02_age_barplot.png", plot = p_combined, width = 8, height = 5, path = "./../Figures/")
ggplot(halldorsson_explore) +
geom_bar(aes(x = mutation_class_cpg, y = avg_age_father), fill = "deepskyblue3", color = "black", stat = "identity") +
scale_y_continuous(limits = c(0, 33.5)) +
xlab("Mutation Class") +
ylab("Average Age of Father")
library(tidyverse)
halldorsson_child_fract <- read_rds("../data/halldorsson_child_fract.rds") |> as.data.frame()
linear_regr_c_g <- lm(`C_G` ~ age_father, data = halldorsson_child_fract)
linear_regr_c_t <- lm(`C_T` ~ age_father, data = halldorsson_child_fract)
linear_regr_cpg_tpg <- lm(`CpG_TpG` ~ age_father, data = halldorsson_child_fract)
linear_regr_t_c <- lm(`T_C` ~ age_father, data = halldorsson_child_fract)
linear_regr_t_g <- lm(`T_G` ~ age_father, data = halldorsson_child_fract)
linear_regr_c_a <- lm(`C_A` ~ age_father, data = halldorsson_child_fract)
linear_regr_t_a <- lm(`T_A` ~ age_father, data = halldorsson_child_fract)
library(patchwork)
p1 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_c_g, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `C_G`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p2 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_c_t, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `C_T`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p3 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_cpg_tpg, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `CpG_TpG`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p4 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_t_c, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `T_C`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p5 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_t_g, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `T_G`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p6 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_c_a, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `C_A`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p7 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_t_a, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `T_A`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p1 + p2 + p3 + p4 + p5 + p6 + p7
# Chunk 1
library(tidyverse)
theme_set(theme_minimal())
halldorsson_raw <- read.delim("./../data/halldorsson_2019.tsv", header = TRUE, sep = "\t")
# Chunk 2
halldorsson_lean <- halldorsson_raw |>
filter(mutation_class_cpg %in% c("T>C", "C>T", "CpG>TpG", "C>G", "C>A", "T>A", "T>G")) |>
select(AGE_FATHER, Child, mutation_class_cpg)
# Chunk 3
halldorsson_child <- halldorsson_lean |>
group_by(Child, mutation_class_cpg) |>
summarize(
nr_of_mut = n()
)
# Chunk 4
halldorsson_child <- halldorsson_child |>
pivot_wider(names_from = mutation_class_cpg,
values_from = nr_of_mut)
halldorsson_child[is.na(halldorsson_child)] <- 0
# Chunk 5
halldorsson_child$total <- rowSums(halldorsson_child) - halldorsson_child$Child
# Chunk 6
halldorsson_fract_child <- halldorsson_child |>
mutate_at(vars(-total, -Child), funs(./total)) |>
select(-total)
# Chunk 7
halldorsson_father <- halldorsson_lean |>
group_by(AGE_FATHER, mutation_class_cpg) |>
summarize(
nr_of_mut = n()
)
# Chunk 8
halldorsson_father <- halldorsson_father |>
pivot_wider(names_from = mutation_class_cpg,
values_from = nr_of_mut)
halldorsson_father[is.na(halldorsson_father)] <- 0
# Chunk 9
halldorsson_father$total <- rowSums(halldorsson_father) - halldorsson_father$AGE_FATHER
# Chunk 10
halldorsson_fract_father <- halldorsson_father |>
mutate_at(vars(-total, -AGE_FATHER), funs(./total)) |>
select(-total)
# Chunk 11
linear <- lm(AGE_FATHER ~ ., data = halldorsson_fract_father)
quadratic <- lm(AGE_FATHER ~ `C>A` + `C>G` + `C>T` + `CpG>TpG` + `T>C` + `T>G` + `T>A` + I(`C>A`^2)
+ I(`C>G`^2) + I(`C>T`^2) + I(`CpG>TpG`^2) + I(`T>C`^2) + I(`T>G`^2) + I(`T>A`^2),
data = halldorsson_fract_father)
cubic <- lm(AGE_FATHER ~ `C>A` + `C>G` + `C>T` + `CpG>TpG` + `T>C` + `T>G` + `T>A` + I(`C>A`^2)
+ I(`C>G`^2) + I(`C>T`^2) + I(`CpG>TpG`^2) + I(`T>C`^2) + I(`T>G`^2) + I(`T>A`^2)
+ I(`C>G`^3) + I(`C>T`^3) + I(`CpG>TpG`^3) + I(`T>C`^3) + I(`T>G`^3) + I(`T>A`^3),
data = halldorsson_fract_father)
# Chunk 12
summary(linear)
summary(quadratic)
summary(cubic)
# Chunk 13
linear_ca <- lm(`C>A` ~ AGE_FATHER, data = halldorsson_fract_father)
pred <- predict(linear_ca, data = halldorsson_fract_father)
halldorsson_fract_father$predicted <- pred
halldorsson_fract_father |>
ggplot(aes(x = AGE_FATHER, y = `C>A`)) +
geom_point() +
geom_smooth(aes(y = predicted))
library(patchwork)
p1 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `C>A`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p2 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `C>G`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p3 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `C>T`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p4 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `CpG>TpG`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p5 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `T>C`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p6 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `T>G`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p7 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `T>A`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p1 + p2 + p3 + p4 + p5 + p6 + p7
library(patchwork)
p1 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_c_g, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `C_G`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p2 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_c_t, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `C_T`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p3 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_cpg_tpg, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `CpG_TpG`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p4 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_t_c, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `T_C`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p5 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_t_g, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `T_G`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p6 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_c_a, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `C_A`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p7 <- halldorsson_child_fract |>
mutate(predicted = predict(linear_regr_t_a, data = halldorsson_child_fract)) |>
ggplot(aes(x = age_father, y = `T_A`)) +
geom_point() +
geom_smooth(aes(y = predicted))
p1 + p2 + p3 + p4 + p5 + p6 + p7
library(patchwork)
p1 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `C>A`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p2 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `C>G`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p3 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `C>T`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p4 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `CpG>TpG`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p5 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `T>C`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p6 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `T>G`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p7 <- ggplot(halldorsson_fract_father, aes(x = AGE_FATHER, y = `T>A`)) +
geom_point() +
geom_smooth(method = "lm") +
xlab("Fathers' Age")
p1 + p2 + p3 + p4 + p5 + p6 + p7
library(tidyverse)
halldorsson_raw <- read.delim("./../data/halldorsson_2019.tsv", header = TRUE, sep = "\t")
halldorsson_explore <- halldorsson_raw |>
filter(mutation_class_cpg %in% c("T>C", "C>T", "CpG>TpG", "C>G", "C>A", "T>A", "T>G")) |>
select(AGE_FATHER, AGE_MOTHER, Child, mutation_class_cpg, Phase_app1_app2)
View(halldorsson_explore)
View(halldorsson_raw)
library(tidyverse)
halldorsson_raw <- read.delim("./../data/halldorsson_2019.tsv", header = TRUE, sep = "\t")
colnames(halldorsson_raw) <- c("chr", "pos", "ref", "alt", "mutation_class_cpg", "type_of_mutation", "context",
"child", "phase_app1_app2", "age_father", "age_mother", "species", "reference", "class")
halldorsson_explore <- halldorsson_raw |>
filter(mutation_class_cpg %in% c("T>C", "C>T", "CpG>TpG", "C>G", "C>A", "T>A", "T>G")) |>
select(age_father, age_mother, child, mutation_class_cpg, phase_app1_app2)
View(halldorsson_explore)
write_rds(x = halldorsson_explore, file = "../data/halldorsson_explore.rds")
library(tidyverse)
theme_set(theme_minimal())
halldorsson_explore <- read_rds("../data/halldorsson_explore.rds") |> as.data.frame()
halldorsson_explore <- halldorsson_explore |>
group_by(mutation_class_cpg) |>
summarize(
avg_age_father = mean(age_father),
avg_age_mother = mean(age_mother),
nr_of_mut = n()
)
ggplot(halldorsson_explore, aes(x = avg_age_father, y = avg_age_mother, size = nr_of_mutations, color = mutation_class_cpg)) +
geom_point() +
xlab("Average Age of Father") +
ylab("Average Age of Mother") +
labs(size = "Number of Mutations", color = "Mutation Class")
ggplot(halldorsson_explore, aes(x = avg_age_father, y = avg_age_mother, size = nr_of_mut, color = mutation_class_cpg)) +
geom_point() +
xlab("Average Age of Father") +
ylab("Average Age of Mother") +
labs(size = "Number of Mutations", color = "Mutation Class")
library(tidyverse)
theme_set(theme_minimal())
halldorsson_explore <- read_rds("../data/halldorsson_explore.rds") |> as.data.frame()
halldorsson_explore <- halldorsson_explore |>
mutate(avg_age = (AGE_FATHER + AGE_MOTHER) / 2,
.before = 3)
halldorsson_explore <- halldorsson_explore |>
mutate(avg_age = (aget_father + age_mother) / 2,
.before = 3)
halldorsson_explore <- halldorsson_explore |>
mutate(avg_age = (age_father + age_mother) / 2,
.before = 3)
View(halldorsson_explore)
cor.test(halldorsson_explore$age_father, halldorsson_explore$age_mother)
ggplot(halldorsson_explore, aes(x = age_father, y = age_mother)) +
geom_point() +
scale_x_continuous(limits = c(0, 75)) +
scale_y_continuous(limits = c(0, 60)) +
annotate("segment", x = 0, y = 0, xend = 60, yend = 60) +
xlab("Age of Father") +
ylab("Age of Mother")
